#ifndef _DATA_H
#define _DATA_H
 
#include <memory>
#include <vector> 
#include <iostream>
#include <fstream>
#include <string.h>
#include <string>

//include "Level.h"
//#include "Player.h" 
//#include "WeaponManager.h" 

#include <SFML/Window.hpp>
#include <SFML/Graphics.hpp>
#include <SFML/Audio.hpp>

using namespace std;

class DataManager{
	private:  
		struct Data{
			long long DamageDealt,PowerupsTaken,MatchesPlayed,BlocksDestroyed,WeaponsUsed,WeaponsStat[20];
			Data(){
				DamageDealt=0;
				PowerupsTaken=0;
				MatchesPlayed=0;
				BlocksDestroyed=0;
				WeaponsUsed=0;
				memset(WeaponsStat,0,sizeof WeaponsStat);
			}
		};
		long long TDamageDealt[3],TPowerupsTaken[3],TBlocksDestroyed,TWeaponsUsed[3],TWeaponsStat[20];
	public:
		Data MainData;

			//////////////////////////////////////////////////////////////////////
			////constructor, loads all saved data
			//////////////////////////////////////////////////////////////////////
		DataManager();

			//////////////////////////////////////////////////////////////////////
			////deconstructor
			//////////////////////////////////////////////////////////////////////
		~DataManager();

			//////////////////////////////////////////////////////////////////////
			////resets all temporary memory at the beginning of the match
			//////////////////////////////////////////////////////////////////////
		void Init();
		
			//////////////////////////////////////////////////////////////////////
			////update temporary data: damage received by player id
			//////////////////////////////////////////////////////////////////////
		void DealDamage(int id,int damage);

			//////////////////////////////////////////////////////////////////////
			////update temporary data: powerup taken by player id
			//////////////////////////////////////////////////////////////////////
		void TakePowerup(int id);

			//////////////////////////////////////////////////////////////////////
			////update temporary data: weapons used by player id 
			//////////////////////////////////////////////////////////////////////
		void UseWeapon(int id);

			//////////////////////////////////////////////////////////////////////
			////update temporary data: softblocks destroyed by any player
			//////////////////////////////////////////////////////////////////////
		void DestroyBlock(); 

			//////////////////////////////////////////////////////////////////////
			////update temporary data: weapon trigger (different for each weapon)
			////Bomb: Bombs exploded	 (both bombs)
			////Mines: Mines triggered (both mines)
			////Rockets: Rockets hit	
			////  Nuke: 
			////Medikit: HP healed
			////  Turret: Player damage dealt by turret
			////Shuriken: Shurikens hit
			////  Flamethrower: Times used
			////Sword: Times used
			////  Immolation cloak: Seconds active
			//////////////////////////////////////////////////////////////////////
		void UpdateWeapon(int wpnid,int amt);
		
			//////////////////////////////////////////////////////////////////////
			////Presents the end-game screen (Player id wins)
			////also calls updatedata() and savedata()
			////Returns the results of endgamechoice:
			////Play again (2), Main Menu(1) or exit (0)
			//////////////////////////////////////////////////////////////////////
		sf::Texture FinishMatch(int id,shared_ptr<sf::RenderWindow> MainWindow);
		
			//////////////////////////////////////////////////////////////////////
			////Loads the data from file
			//////////////////////////////////////////////////////////////////////
		void LoadData();
		
			//////////////////////////////////////////////////////////////////////
			////Updates the permanent data with the temporary ones
			//////////////////////////////////////////////////////////////////////
		void UpdateData();

			//////////////////////////////////////////////////////////////////////
			//Saves the data to file
			//////////////////////////////////////////////////////////////////////
		void SaveData();

			//////////////////////////////////////////////////////////////////////
			//Prints data to terminal
			//////////////////////////////////////////////////////////////////////
		void PrintData();
};

#endif
